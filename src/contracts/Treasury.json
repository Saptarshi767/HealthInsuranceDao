{
  "address": "0x2A5D4a792c7C84d048735D95FB5a1508E50d9290",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasury_wallet",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "hospitalName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "patientAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "medicalProcedure",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "medicalProcedureCost",
          "type": "uint256"
        }
      ],
      "name": "ClaimCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "hospitalName",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "hospitalAddress",
          "type": "address"
        }
      ],
      "name": "HospitalAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "hospitalName",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "patientAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "medicalProcedure",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "medicalProcedureCost",
          "type": "uint256"
        }
      ],
      "name": "HospitalPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newLoadingRate",
          "type": "uint256"
        }
      ],
      "name": "LoadingRateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "policy",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "lock",
          "type": "address"
        }
      ],
      "name": "MembershipAddedToPolicy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "policyNumber",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "coverage",
          "type": "uint256[]"
        }
      ],
      "name": "PolicyCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "code",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "probability",
          "type": "uint256"
        }
      ],
      "name": "ProcedureAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "hospitalName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "hospitalAddress",
          "type": "address"
        }
      ],
      "name": "addHospital",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256[]",
          "name": "coverage",
          "type": "uint256[]"
        }
      ],
      "name": "addInsurancePolicy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_policy",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "lock",
          "type": "address"
        }
      ],
      "name": "addMembershipToPolicy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "code",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "probability",
          "type": "uint256"
        }
      ],
      "name": "addProcedure",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "percentage",
          "type": "uint256"
        }
      ],
      "name": "applyPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "claims",
      "outputs": [
        {
          "internalType": "string",
          "name": "hospitalName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "patientAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "medicalProcedure",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "medicalProcedureCost",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllClaims",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "hospitalName",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "patientAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "medicalProcedure",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "medicalProcedureCost",
              "type": "uint256"
            }
          ],
          "internalType": "struct Treasury.Claim[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        }
      ],
      "name": "getClaim",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "hospitalName",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "patientAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "medicalProcedure",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "medicalProcedureCost",
              "type": "uint256"
            }
          ],
          "internalType": "struct Treasury.Claim",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "hospitalName",
          "type": "string"
        }
      ],
      "name": "getHospitalAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_policy",
          "type": "uint256"
        }
      ],
      "name": "getMembershipFromPolicy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "policyNumber",
          "type": "uint256"
        }
      ],
      "name": "getPremium",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "loading_rate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "hospitalName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "patientAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "medicalProcedure",
          "type": "uint256"
        }
      ],
      "name": "payHospital",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "policy_counter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "new_loading_rate",
          "type": "uint256"
        }
      ],
      "name": "setLoadingRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury_wallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xf325d16b2b1a4759f11dbcccda076f7942ffafa75b430ac407c0c90e1cce02be",
  "receipt": {
    "to": null,
    "from": "0xB496D0EcBD6695A9B6635A0CDF84080858ADAcBD",
    "contractAddress": "0x2A5D4a792c7C84d048735D95FB5a1508E50d9290",
    "transactionIndex": 107,
    "gasUsed": "1481652",
    "logsBloom": "0x
    "blockHash": "0x98c554df0dbfddc8d933e36ee8f5cae3b9aba61078776d44a409a49db6362937",
    "transactionHash": "0xf325d16b2b1a4759f11dbcccda076f7942ffafa75b430ac407c0c90e1cce02be",
    "logs": [],
    "blockNumber": 9750044,
    "cumulativeGasUsed": "18205412",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x3FE96Fd6ff721B15d5946CBb301AADEc7C0928C7"
  ],
  "numDeployments": 1,
  "solcInputHash": "32d20b1edc120391aeb3e6db7653b4d5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury_wallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"hospitalName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"patientAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"medicalProcedure\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"medicalProcedureCost\",\"type\":\"uint256\"}],\"name\":\"ClaimCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"hospitalName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hospitalAddress\",\"type\":\"address\"}],\"name\":\"HospitalAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"hospitalName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"patientAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"medicalProcedure\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"medicalProcedureCost\",\"type\":\"uint256\"}],\"name\":\"HospitalPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newLoadingRate\",\"type\":\"uint256\"}],\"name\":\"LoadingRateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"policy\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lock\",\"type\":\"address\"}],\"name\":\"MembershipAddedToPolicy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"policyNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"coverage\",\"type\":\"uint256[]\"}],\"name\":\"PolicyCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"code\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"probability\",\"type\":\"uint256\"}],\"name\":\"ProcedureAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"hospitalName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"hospitalAddress\",\"type\":\"address\"}],\"name\":\"addHospital\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"coverage\",\"type\":\"uint256[]\"}],\"name\":\"addInsurancePolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_policy\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lock\",\"type\":\"address\"}],\"name\":\"addMembershipToPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"code\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"probability\",\"type\":\"uint256\"}],\"name\":\"addProcedure\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"applyPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"claims\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"hospitalName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"patientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"medicalProcedure\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"medicalProcedureCost\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllClaims\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"hospitalName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"patientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"medicalProcedure\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"medicalProcedureCost\",\"type\":\"uint256\"}],\"internalType\":\"struct Treasury.Claim[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"}],\"name\":\"getClaim\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"hospitalName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"patientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"medicalProcedure\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"medicalProcedureCost\",\"type\":\"uint256\"}],\"internalType\":\"struct Treasury.Claim\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"hospitalName\",\"type\":\"string\"}],\"name\":\"getHospitalAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_policy\",\"type\":\"uint256\"}],\"name\":\"getMembershipFromPolicy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"policyNumber\",\"type\":\"uint256\"}],\"name\":\"getPremium\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"loading_rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"hospitalName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"patientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"medicalProcedure\",\"type\":\"uint256\"}],\"name\":\"payHospital\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"policy_counter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"new_loading_rate\",\"type\":\"uint256\"}],\"name\":\"setLoadingRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury_wallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Treasury.sol\":\"Treasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/Treasury.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.4;\\n\\ncontract Treasury {\\n\\n    struct Claim {\\n        string hospitalName;\\n        address patientAddress;\\n        uint256 medicalProcedure;\\n        uint256 medicalProcedureCost;\\n    }\\n\\n    mapping(uint256 => Claim) public claims; // Mapping to store claims by ID\\n    uint256 public claimCounter;\\n    mapping(string => address) private hospitalList; //List of hostpitals that can be paid\\n\\tmapping(uint256 => uint256) private medical_procedure_cost;\\n    mapping(uint256 => uint256) private medical_procedure_probability;\\n\\tmapping(uint256 => uint256[]) private policy; \\n\\tmapping(uint256 => address) private membership_nft;\\n\\tmapping(uint256 => string) private policy_name;\\n    uint256 public loading_rate;\\n\\tuint256 public policy_counter;\\n\\taddress public treasury_wallet;\\n\\n\\tevent HospitalAdded(string hospitalName, address indexed hospitalAddress);\\n    event ClaimCreated(uint256 indexed claimId, string hospitalName, address patientAddress, uint256 medicalProcedure, uint256 medicalProcedureCost);\\n    event HospitalPaid(string hospitalName, address indexed patientAddress, uint256 medicalProcedure, uint256 medicalProcedureCost);\\n    event PolicyCreated(uint256 indexed policyNumber, string name, uint256[] coverage);\\n    event ProcedureAdded(uint256 code, uint256 cost, uint256 probability);\\n    event MembershipAddedToPolicy(uint256 indexed policy, address lock);\\n    event LoadingRateChanged(uint256 newLoadingRate);\\n\\n    constructor(address _treasury_wallet) {\\n        loading_rate = 10; //10% loading\\n\\t\\tpolicy_counter = 0;\\n\\t\\ttreasury_wallet= _treasury_wallet;\\n    }\\n\\n\\n    modifier onlyVoter() {\\n        require(msg.sender == treasury_wallet, \\\"Only a voter can call this function\\\");\\n\\t\\t_;\\n    }\\n\\n    // Add hospital to the list\\n    function addHospital(string memory hospitalName, address hospitalAddress) public  {\\n        require(hospitalList[hospitalName] == address(0), \\\"Hospital already exists\\\");\\n        hospitalList[hospitalName] = hospitalAddress;\\n\\t\\temit HospitalAdded(hospitalName, hospitalAddress);\\n    }\\n\\n    // Function to get the address of a hospital by name\\n    function getHospitalAddress(string memory hospitalName) public view returns (address) {\\n        return hospitalList[hospitalName];\\n    }\\n\\n    function payHospital(\\n        string memory hospitalName,\\n        address patientAddress,\\n        uint256 medicalProcedure\\n    ) public payable onlyVoter {\\n        require(\\n            hospitalList[hospitalName] != address(0),\\n            \\\"Hospital does not exist\\\"\\n        );\\n        address hospitalAddress = hospitalList[hospitalName];\\n        uint256 medicalProcedureCost = msg.value;\\n\\n        require(msg.value > 0, \\\"Payment amount must be greater than 0\\\");\\n\\n        // Attempt to send the payment to the hospital address\\n        (bool success, ) = hospitalAddress.call{value: msg.value}(\\\"\\\");\\n        require(success, \\\"Payment failed\\\");\\n\\n        claims[claimCounter] = Claim({\\n            hospitalName: hospitalName,\\n            patientAddress: patientAddress,\\n            medicalProcedure: medicalProcedure,\\n            medicalProcedureCost: msg.value\\n        });\\n\\n        claimCounter++;\\n\\n\\t\\temit HospitalPaid(hospitalName,  patientAddress,  medicalProcedure, medicalProcedureCost);\\n        \\n    }\\n\\n    function getClaim(uint256 claimId) public view returns (Claim memory) {\\n        require(claimId < claimCounter, \\\"Claim does not exist\\\");\\n        return claims[claimId];\\n    }\\n\\n    function getAllClaims() public view returns (Claim[] memory) {\\n        Claim[] memory allClaims = new Claim[](claimCounter);\\n        for (uint256 i = 0; i < claimCounter; i++) {\\n            allClaims[i] = claims[i];\\n        }\\n        return allClaims;\\n    }\\n\\n\\n\\tfunction setLoadingRate(uint256 new_loading_rate) public onlyVoter {\\n\\t\\tloading_rate = new_loading_rate;\\n\\t\\temit LoadingRateChanged(new_loading_rate);\\n\\t} \\n\\n\\tfunction addProcedure(uint256 code, uint256 cost, uint256 probability) public{\\n\\t\\tmedical_procedure_cost[code] =cost;\\n\\t\\tmedical_procedure_probability[code] = probability;\\n\\t\\temit ProcedureAdded(code, cost, probability);\\n\\t}\\n\\n\\tfunction addInsurancePolicy(string memory name, uint256[] calldata coverage) public{\\n\\t\\t//create a health insurance policy that covers x,y,z conditions\\n\\t\\tpolicy[policy_counter] = coverage;\\n\\t\\tpolicy_name[policy_counter] = name;\\n\\t\\tpolicy_counter++;\\n\\t\\temit PolicyCreated(policy_counter, name, coverage);\\n\\t}\\n\\n\\tfunction addMembershipToPolicy(uint256 _policy, address lock)public{\\n\\t\\tmembership_nft[_policy] = lock;\\n\\t\\temit MembershipAddedToPolicy(_policy, lock);\\n\\t}\\n\\n\\tfunction getMembershipFromPolicy(uint256 _policy)public view returns(address) {\\n\\t\\treturn membership_nft[_policy];\\n\\t}\\n\\n\\tfunction getPremium(uint256 policyNumber) public view returns(uint256){\\n\\t\\tuint256 expectedLoss = 0;\\n\\t\\tuint256[] memory coverage = policy[policyNumber];\\n\\t\\tfor(uint256 i = 0; i<coverage.length; i++){\\n\\t\\t\\texpectedLoss+= medical_procedure_cost[coverage[i]] * medical_procedure_probability[coverage[i]]; \\n\\t\\t}\\n\\t\\tuint256 profit = applyPercentage(expectedLoss, loading_rate) + expectedLoss;\\n\\t\\treturn expectedLoss + profit;\\n\\t}\\n\\n    function applyPercentage(uint256 amount, uint256 percentage) public pure returns (uint256) {\\n        require(percentage <= 100, \\\"Percentage should be a whole number between 1 and 100\\\");\\n        return (amount * percentage) / 100;\\n    }\\n\\n\\n}\",\"keccak256\":\"0x1a497aa32a6bb74f403ba72d437617eb3b563334f318fd99a24a1bfd0c16554b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620019d0380380620019d083398101604081905262000034916200009e565b600a6008819055600060095580546001600160a01b0319166001600160a01b0392909216919091179055620000cb565b60006001600160a01b0382165b92915050565b620000828162000064565b81146200008e57600080fd5b50565b8051620000718162000077565b600060208284031215620000b557620000b5600080fd5b6000620000c3848462000091565b949350505050565b6118f580620000db6000396000f3fe60806040526004361061010e5760003560e01c80635aef2447116100a5578063a0dabfcb11610074578063a98db39611610059578063a98db39614610319578063bf90c02d1461032f578063d14ec39a1461034f57600080fd5b8063a0dabfcb146102c9578063a888c2cd146102e957600080fd5b80635aef24471461023a5780635b23c27d146102675780635c405b81146102895780639512fb3b146102a957600080fd5b80633416af8f116100e15780633416af8f146101ae5780633c0e86ba146101e45780634d099648146102045780634efa8f171461022457600080fd5b806308f54c3e146101135780630cf33275146101355780631bf1fffb146101615780633098920714610181575b600080fd5b34801561011f57600080fd5b5061013361012e366004610f05565b610362565b005b34801561014157600080fd5b5061014b60095481565b6040516101589190610f83565b60405180910390f35b34801561016d57600080fd5b5061014b61017c366004610fac565b6103f3565b34801561018d57600080fd5b50600a546101a1906001600160a01b031681565b6040516101589190610fe7565b3480156101ba57600080fd5b506101a16101c9366004610fac565b6000908152600660205260409020546001600160a01b031690565b3480156101f057600080fd5b506101336101ff366004610ff5565b61050f565b34801561021057600080fd5b5061013361021f366004611059565b61056e565b34801561023057600080fd5b5061014b60015481565b34801561024657600080fd5b5061025a610255366004610fac565b61064e565b6040516101589190611159565b34801561027357600080fd5b5061027c61077b565b60405161015891906111dc565b34801561029557600080fd5b506101336102a4366004610fac565b610919565b3480156102b557600080fd5b506101336102c43660046111ed565b610983565b3480156102d557600080fd5b5061014b6102e436600461120f565b6109e9565b3480156102f557600080fd5b50610309610304366004610fac565b610a2b565b6040516101589493929190611242565b34801561032557600080fd5b5061014b60085481565b34801561033b57600080fd5b506101a161034a36600461127c565b610ae7565b61013361035d3660046112b7565b610b18565b600954600090815260056020526040902061037e908383610d50565b50600954600090815260076020526040902061039a84826113eb565b50600980549060006103ab836114c5565b91905055506009547f9ef9b973661c495624cfd675c93206df84209de5d252c5190623c1def0d5e06e8484846040516103e69392919061153a565b60405180910390a2505050565b600081815260056020908152604080832080548251818502810185019093528083528493849392919083018282801561044b57602002820191906000526020600020905b815481526020019060010190808311610437575b5050505050905060005b81518110156104e0576004600083838151811061047457610474611560565b6020026020010151815260200190815260200160002054600360008484815181106104a1576104a1611560565b60200260200101518152602001908152602001600020546104c29190611576565b6104cc9084611595565b9250806104d8816114c5565b915050610455565b506000826104f0846008546109e9565b6104fa9190611595565b90506105068184611595565b95945050505050565b6000838152600360209081526040808320859055600490915290819020829055517f42dbedb466fff6b6408608cb4a0260cfa32164f40f1da2aa85a967e42c7dc81290610561908590859085906115a8565b60405180910390a1505050565b60006001600160a01b031660028360405161058991906115f2565b908152604051908190036020019020546001600160a01b0316146105c85760405162461bcd60e51b81526004016105bf9061163c565b60405180910390fd5b806002836040516105d991906115f2565b90815260405190819003602001812080546001600160a01b0393841673ffffffffffffffffffffffffffffffffffffffff19909116179055908216907f6e3a1bab169a0e2be4f8574901a5218e9f7319af1973e0d304486c3e5cebd3db9061064290859061164c565b60405180910390a25050565b61068260405180608001604052806060815260200160006001600160a01b0316815260200160008152602001600081525090565b60015482106106a35760405162461bcd60e51b81526004016105bf90611691565b600082815260208190526040908190208151608081019092528054829082906106cb9061131c565b80601f01602080910402602001604051908101604052809291908181526020018280546106f79061131c565b80156107445780601f1061071957610100808354040283529160200191610744565b820191906000526020600020905b81548152906001019060200180831161072757829003601f168201915b505050918352505060018201546001600160a01b031660208201526002820154604082015260039091015460609091015292915050565b6060600060015467ffffffffffffffff81111561079a5761079a610db0565b6040519080825280602002602001820160405280156107ff57816020015b6107ec60405180608001604052806060815260200160006001600160a01b0316815260200160008152602001600081525090565b8152602001906001900390816107b85790505b50905060005b60015481101561091357600081815260208190526040908190208151608081019092528054829082906108379061131c565b80601f01602080910402602001604051908101604052809291908181526020018280546108639061131c565b80156108b05780601f10610885576101008083540402835291602001916108b0565b820191906000526020600020905b81548152906001019060200180831161089357829003601f168201915b505050918352505060018201546001600160a01b031660208201526002820154604082015260039091015460609091015282518390839081106108f5576108f5611560565b6020026020010181905250808061090b906114c5565b915050610805565b50919050565b600a546001600160a01b031633146109435760405162461bcd60e51b81526004016105bf906116fe565b60088190556040517f02dfc8314647139d3b5d77d7518752fd07b019c15acb97bc9ddec5505d9024ac90610978908390610f83565b60405180910390a150565b60008281526006602052604090819020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384161790555182907f5cd227421765f010130529b6663cfe153b5bdda5e040201828935dda96b1e5ed90610642908490610fe7565b60006064821115610a0c5760405162461bcd60e51b81526004016105bf90611768565b6064610a188385611576565b610a22919061178e565b90505b92915050565b600060208190529081526040902080548190610a469061131c565b80601f0160208091040260200160405190810160405280929190818152602001828054610a729061131c565b8015610abf5780601f10610a9457610100808354040283529160200191610abf565b820191906000526020600020905b815481529060010190602001808311610aa257829003601f168201915b505050506001830154600284015460039094015492936001600160a01b039091169290915084565b6000600282604051610af991906115f2565b908152604051908190036020019020546001600160a01b031692915050565b600a546001600160a01b03163314610b425760405162461bcd60e51b81526004016105bf906116fe565b60006001600160a01b0316600284604051610b5d91906115f2565b908152604051908190036020019020546001600160a01b031603610b935760405162461bcd60e51b81526004016105bf906117d6565b6000600284604051610ba591906115f2565b908152604051908190036020019020546001600160a01b031690503480610bde5760405162461bcd60e51b81526004016105bf90611840565b6000826001600160a01b031634604051610bf790611850565b60006040518083038185875af1925050503d8060008114610c34576040519150601f19603f3d011682016040523d82523d6000602084013e610c39565b606091505b5050905080610c5a5760405162461bcd60e51b81526004016105bf9061188f565b604080516080810182528781526001600160a01b0387166020808301919091528183018790523460608301526001546000908152908190529190912081518190610ca490826113eb565b5060208201516001828101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0390931692909217909155604083015160028301556060909201516003909101558054906000610cfe836114c5565b9190505550846001600160a01b03167f90db76a30f4d4a2bc42da95d85f03f8c678498fcd7683a2aacccaf8b92e7a040878685604051610d409392919061189f565b60405180910390a2505050505050565b828054828255906000526020600020908101928215610d8b579160200282015b82811115610d8b578235825591602001919060010190610d70565b50610d97929150610d9b565b5090565b5b80821115610d975760008155600101610d9c565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715610dec57610dec610db0565b6040525050565b6000610dfe60405190565b9050610e0a8282610dc6565b919050565b600067ffffffffffffffff821115610e2957610e29610db0565b601f19601f83011660200192915050565b82818337506000910152565b6000610e59610e5484610e0f565b610df3565b905082815260208101848484011115610e7457610e74600080fd5b610e7f848285610e3a565b509392505050565b600082601f830112610e9b57610e9b600080fd5b8135610eab848260208601610e46565b949350505050565b60008083601f840112610ec857610ec8600080fd5b50813567ffffffffffffffff811115610ee357610ee3600080fd5b602083019150836020820283011115610efe57610efe600080fd5b9250929050565b600080600060408486031215610f1d57610f1d600080fd5b833567ffffffffffffffff811115610f3757610f37600080fd5b610f4386828701610e87565b935050602084013567ffffffffffffffff811115610f6357610f63600080fd5b610f6f86828701610eb3565b92509250509250925092565b805b82525050565b60208101610a258284610f7b565b805b8114610f9e57600080fd5b50565b8035610a2581610f91565b600060208284031215610fc157610fc1600080fd5b6000610eab8484610fa1565b60006001600160a01b038216610a25565b610f7d81610fcd565b60208101610a258284610fde565b60008060006060848603121561100d5761100d600080fd5b60006110198686610fa1565b935050602061102a86828701610fa1565b925050604061103b86828701610fa1565b9150509250925092565b610f9381610fcd565b8035610a2581611045565b6000806040838503121561106f5761106f600080fd5b823567ffffffffffffffff81111561108957611089600080fd5b61109585828601610e87565b92505060206110a68582860161104e565b9150509250929050565b60005b838110156110cb5781810151838201526020016110b3565b50506000910152565b60006110de825190565b8084526020840193506110f58185602086016110b0565b601f01601f19169290920192915050565b805160808084526000919084019061111e82826110d4565b91505060208301516111336020860182610fde565b5060408301516111466040860182610f7b565b506060830151610e7f6060860182610f7b565b60208082528101610a228184611106565b6000610a228383611106565b6000611180825190565b8084526020840193508360208202850161119a8560200190565b8060005b858110156111cf57848403895281516111b7858261116a565b94506020830160209a909a019992505060010161119e565b5091979650505050505050565b60208082528101610a228184611176565b6000806040838503121561120357611203600080fd5b60006110958585610fa1565b6000806040838503121561122557611225600080fd5b60006112318585610fa1565b92505060206110a685828601610fa1565b6080808252810161125381876110d4565b90506112626020830186610fde565b61126f6040830185610f7b565b6105066060830184610f7b565b60006020828403121561129157611291600080fd5b813567ffffffffffffffff8111156112ab576112ab600080fd5b610eab84828501610e87565b6000806000606084860312156112cf576112cf600080fd5b833567ffffffffffffffff8111156112e9576112e9600080fd5b6112f586828701610e87565b935050602061102a8682870161104e565b634e487b7160e01b600052602260045260246000fd5b60028104600182168061133057607f821691505b60208210810361091357610913611306565b6000610a2561134e8381565b90565b61135a83611342565b81546008840282811b60001990911b908116901990911617825550505050565b6000611387818484611351565b505050565b818110156113a75761139f60008261137a565b60010161138c565b5050565b601f821115611387576000818152602090206020601f850104810160208510156113d25750805b6113e46020601f86010483018261138c565b5050505050565b815167ffffffffffffffff81111561140557611405610db0565b61140f825461131c565b61141a8282856113ab565b6020601f83116001811461144e57600084156114365750858201515b600019600886021c19811660028602178655506114a7565b600085815260208120601f198616915b8281101561147e578885015182556020948501946001909201910161145e565b8683101561149a5784890151600019601f89166008021c191682555b6001600288020188555050505b505050505050565b634e487b7160e01b600052601160045260246000fd5b600060001982036114d8576114d86114af565b5060010190565b82818337505050565b81835260006020840193507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561152357611523600080fd5b6020830292506115348385846114df565b50500190565b6040808252810161154b81866110d4565b905081810360208301526105068184866114e8565b634e487b7160e01b600052603260045260246000fd5b81810280821583820485141761158e5761158e6114af565b5092915050565b80820180821115610a2557610a256114af565b606081016115b68286610f7b565b6115c36020830185610f7b565b610eab6040830184610f7b565b60006115da825190565b6115e88185602086016110b0565b9290920192915050565b60006115fe82846115d0565b9392505050565b601781526000602082017f486f73706974616c20616c726561647920657869737473000000000000000000815291505b5060200190565b60208082528101610a2581611605565b60208082528101610a2281846110d4565b601481526000602082017f436c61696d20646f6573206e6f7420657869737400000000000000000000000081529150611635565b60208082528101610a258161165d565b602381526000602082017f4f6e6c79206120766f7465722063616e2063616c6c20746869732066756e637481527f696f6e0000000000000000000000000000000000000000000000000000000000602082015291505b5060400190565b60208082528101610a25816116a1565b603581526000602082017f50657263656e746167652073686f756c6420626520612077686f6c65206e756d81527f626572206265747765656e203120616e64203130300000000000000000000000602082015291506116f7565b60208082528101610a258161170e565b634e487b7160e01b600052601260045260246000fd5b60008261179d5761179d611778565b500490565b601781526000602082017f486f73706974616c20646f6573206e6f7420657869737400000000000000000081529150611635565b60208082528101610a25816117a2565b602581526000602082017f5061796d656e7420616d6f756e74206d7573742062652067726561746572207481527f68616e2030000000000000000000000000000000000000000000000000000000602082015291506116f7565b60208082528101610a25816117e6565b6000610a258261134e565b600e81526000602082017f5061796d656e74206661696c656400000000000000000000000000000000000081529150611635565b60208082528101610a258161185b565b606080825281016118b081866110d4565b90506115c36020830185610f7b56fea2646970667358221220f256e03446058661501cec35770dd7787410a0515b659c0f19e7c33ff2098e7164736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061010e5760003560e01c80635aef2447116100a5578063a0dabfcb11610074578063a98db39611610059578063a98db39614610319578063bf90c02d1461032f578063d14ec39a1461034f57600080fd5b8063a0dabfcb146102c9578063a888c2cd146102e957600080fd5b80635aef24471461023a5780635b23c27d146102675780635c405b81146102895780639512fb3b146102a957600080fd5b80633416af8f116100e15780633416af8f146101ae5780633c0e86ba146101e45780634d099648146102045780634efa8f171461022457600080fd5b806308f54c3e146101135780630cf33275146101355780631bf1fffb146101615780633098920714610181575b600080fd5b34801561011f57600080fd5b5061013361012e366004610f05565b610362565b005b34801561014157600080fd5b5061014b60095481565b6040516101589190610f83565b60405180910390f35b34801561016d57600080fd5b5061014b61017c366004610fac565b6103f3565b34801561018d57600080fd5b50600a546101a1906001600160a01b031681565b6040516101589190610fe7565b3480156101ba57600080fd5b506101a16101c9366004610fac565b6000908152600660205260409020546001600160a01b031690565b3480156101f057600080fd5b506101336101ff366004610ff5565b61050f565b34801561021057600080fd5b5061013361021f366004611059565b61056e565b34801561023057600080fd5b5061014b60015481565b34801561024657600080fd5b5061025a610255366004610fac565b61064e565b6040516101589190611159565b34801561027357600080fd5b5061027c61077b565b60405161015891906111dc565b34801561029557600080fd5b506101336102a4366004610fac565b610919565b3480156102b557600080fd5b506101336102c43660046111ed565b610983565b3480156102d557600080fd5b5061014b6102e436600461120f565b6109e9565b3480156102f557600080fd5b50610309610304366004610fac565b610a2b565b6040516101589493929190611242565b34801561032557600080fd5b5061014b60085481565b34801561033b57600080fd5b506101a161034a36600461127c565b610ae7565b61013361035d3660046112b7565b610b18565b600954600090815260056020526040902061037e908383610d50565b50600954600090815260076020526040902061039a84826113eb565b50600980549060006103ab836114c5565b91905055506009547f9ef9b973661c495624cfd675c93206df84209de5d252c5190623c1def0d5e06e8484846040516103e69392919061153a565b60405180910390a2505050565b600081815260056020908152604080832080548251818502810185019093528083528493849392919083018282801561044b57602002820191906000526020600020905b815481526020019060010190808311610437575b5050505050905060005b81518110156104e0576004600083838151811061047457610474611560565b6020026020010151815260200190815260200160002054600360008484815181106104a1576104a1611560565b60200260200101518152602001908152602001600020546104c29190611576565b6104cc9084611595565b9250806104d8816114c5565b915050610455565b506000826104f0846008546109e9565b6104fa9190611595565b90506105068184611595565b95945050505050565b6000838152600360209081526040808320859055600490915290819020829055517f42dbedb466fff6b6408608cb4a0260cfa32164f40f1da2aa85a967e42c7dc81290610561908590859085906115a8565b60405180910390a1505050565b60006001600160a01b031660028360405161058991906115f2565b908152604051908190036020019020546001600160a01b0316146105c85760405162461bcd60e51b81526004016105bf9061163c565b60405180910390fd5b806002836040516105d991906115f2565b90815260405190819003602001812080546001600160a01b0393841673ffffffffffffffffffffffffffffffffffffffff19909116179055908216907f6e3a1bab169a0e2be4f8574901a5218e9f7319af1973e0d304486c3e5cebd3db9061064290859061164c565b60405180910390a25050565b61068260405180608001604052806060815260200160006001600160a01b0316815260200160008152602001600081525090565b60015482106106a35760405162461bcd60e51b81526004016105bf90611691565b600082815260208190526040908190208151608081019092528054829082906106cb9061131c565b80601f01602080910402602001604051908101604052809291908181526020018280546106f79061131c565b80156107445780601f1061071957610100808354040283529160200191610744565b820191906000526020600020905b81548152906001019060200180831161072757829003601f168201915b505050918352505060018201546001600160a01b031660208201526002820154604082015260039091015460609091015292915050565b6060600060015467ffffffffffffffff81111561079a5761079a610db0565b6040519080825280602002602001820160405280156107ff57816020015b6107ec60405180608001604052806060815260200160006001600160a01b0316815260200160008152602001600081525090565b8152602001906001900390816107b85790505b50905060005b60015481101561091357600081815260208190526040908190208151608081019092528054829082906108379061131c565b80601f01602080910402602001604051908101604052809291908181526020018280546108639061131c565b80156108b05780601f10610885576101008083540402835291602001916108b0565b820191906000526020600020905b81548152906001019060200180831161089357829003601f168201915b505050918352505060018201546001600160a01b031660208201526002820154604082015260039091015460609091015282518390839081106108f5576108f5611560565b6020026020010181905250808061090b906114c5565b915050610805565b50919050565b600a546001600160a01b031633146109435760405162461bcd60e51b81526004016105bf906116fe565b60088190556040517f02dfc8314647139d3b5d77d7518752fd07b019c15acb97bc9ddec5505d9024ac90610978908390610f83565b60405180910390a150565b60008281526006602052604090819020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384161790555182907f5cd227421765f010130529b6663cfe153b5bdda5e040201828935dda96b1e5ed90610642908490610fe7565b60006064821115610a0c5760405162461bcd60e51b81526004016105bf90611768565b6064610a188385611576565b610a22919061178e565b90505b92915050565b600060208190529081526040902080548190610a469061131c565b80601f0160208091040260200160405190810160405280929190818152602001828054610a729061131c565b8015610abf5780601f10610a9457610100808354040283529160200191610abf565b820191906000526020600020905b815481529060010190602001808311610aa257829003601f168201915b505050506001830154600284015460039094015492936001600160a01b039091169290915084565b6000600282604051610af991906115f2565b908152604051908190036020019020546001600160a01b031692915050565b600a546001600160a01b03163314610b425760405162461bcd60e51b81526004016105bf906116fe565b60006001600160a01b0316600284604051610b5d91906115f2565b908152604051908190036020019020546001600160a01b031603610b935760405162461bcd60e51b81526004016105bf906117d6565b6000600284604051610ba591906115f2565b908152604051908190036020019020546001600160a01b031690503480610bde5760405162461bcd60e51b81526004016105bf90611840565b6000826001600160a01b031634604051610bf790611850565b60006040518083038185875af1925050503d8060008114610c34576040519150601f19603f3d011682016040523d82523d6000602084013e610c39565b606091505b5050905080610c5a5760405162461bcd60e51b81526004016105bf9061188f565b604080516080810182528781526001600160a01b0387166020808301919091528183018790523460608301526001546000908152908190529190912081518190610ca490826113eb565b5060208201516001828101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0390931692909217909155604083015160028301556060909201516003909101558054906000610cfe836114c5565b9190505550846001600160a01b03167f90db76a30f4d4a2bc42da95d85f03f8c678498fcd7683a2aacccaf8b92e7a040878685604051610d409392919061189f565b60405180910390a2505050505050565b828054828255906000526020600020908101928215610d8b579160200282015b82811115610d8b578235825591602001919060010190610d70565b50610d97929150610d9b565b5090565b5b80821115610d975760008155600101610d9c565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715610dec57610dec610db0565b6040525050565b6000610dfe60405190565b9050610e0a8282610dc6565b919050565b600067ffffffffffffffff821115610e2957610e29610db0565b601f19601f83011660200192915050565b82818337506000910152565b6000610e59610e5484610e0f565b610df3565b905082815260208101848484011115610e7457610e74600080fd5b610e7f848285610e3a565b509392505050565b600082601f830112610e9b57610e9b600080fd5b8135610eab848260208601610e46565b949350505050565b60008083601f840112610ec857610ec8600080fd5b50813567ffffffffffffffff811115610ee357610ee3600080fd5b602083019150836020820283011115610efe57610efe600080fd5b9250929050565b600080600060408486031215610f1d57610f1d600080fd5b833567ffffffffffffffff811115610f3757610f37600080fd5b610f4386828701610e87565b935050602084013567ffffffffffffffff811115610f6357610f63600080fd5b610f6f86828701610eb3565b92509250509250925092565b805b82525050565b60208101610a258284610f7b565b805b8114610f9e57600080fd5b50565b8035610a2581610f91565b600060208284031215610fc157610fc1600080fd5b6000610eab8484610fa1565b60006001600160a01b038216610a25565b610f7d81610fcd565b60208101610a258284610fde565b60008060006060848603121561100d5761100d600080fd5b60006110198686610fa1565b935050602061102a86828701610fa1565b925050604061103b86828701610fa1565b9150509250925092565b610f9381610fcd565b8035610a2581611045565b6000806040838503121561106f5761106f600080fd5b823567ffffffffffffffff81111561108957611089600080fd5b61109585828601610e87565b92505060206110a68582860161104e565b9150509250929050565b60005b838110156110cb5781810151838201526020016110b3565b50506000910152565b60006110de825190565b8084526020840193506110f58185602086016110b0565b601f01601f19169290920192915050565b805160808084526000919084019061111e82826110d4565b91505060208301516111336020860182610fde565b5060408301516111466040860182610f7b565b506060830151610e7f6060860182610f7b565b60208082528101610a228184611106565b6000610a228383611106565b6000611180825190565b8084526020840193508360208202850161119a8560200190565b8060005b858110156111cf57848403895281516111b7858261116a565b94506020830160209a909a019992505060010161119e565b5091979650505050505050565b60208082528101610a228184611176565b6000806040838503121561120357611203600080fd5b60006110958585610fa1565b6000806040838503121561122557611225600080fd5b60006112318585610fa1565b92505060206110a685828601610fa1565b6080808252810161125381876110d4565b90506112626020830186610fde565b61126f6040830185610f7b565b6105066060830184610f7b565b60006020828403121561129157611291600080fd5b813567ffffffffffffffff8111156112ab576112ab600080fd5b610eab84828501610e87565b6000806000606084860312156112cf576112cf600080fd5b833567ffffffffffffffff8111156112e9576112e9600080fd5b6112f586828701610e87565b935050602061102a8682870161104e565b634e487b7160e01b600052602260045260246000fd5b60028104600182168061133057607f821691505b60208210810361091357610913611306565b6000610a2561134e8381565b90565b61135a83611342565b81546008840282811b60001990911b908116901990911617825550505050565b6000611387818484611351565b505050565b818110156113a75761139f60008261137a565b60010161138c565b5050565b601f821115611387576000818152602090206020601f850104810160208510156113d25750805b6113e46020601f86010483018261138c565b5050505050565b815167ffffffffffffffff81111561140557611405610db0565b61140f825461131c565b61141a8282856113ab565b6020601f83116001811461144e57600084156114365750858201515b600019600886021c19811660028602178655506114a7565b600085815260208120601f198616915b8281101561147e578885015182556020948501946001909201910161145e565b8683101561149a5784890151600019601f89166008021c191682555b6001600288020188555050505b505050505050565b634e487b7160e01b600052601160045260246000fd5b600060001982036114d8576114d86114af565b5060010190565b82818337505050565b81835260006020840193507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561152357611523600080fd5b6020830292506115348385846114df565b50500190565b6040808252810161154b81866110d4565b905081810360208301526105068184866114e8565b634e487b7160e01b600052603260045260246000fd5b81810280821583820485141761158e5761158e6114af565b5092915050565b80820180821115610a2557610a256114af565b606081016115b68286610f7b565b6115c36020830185610f7b565b610eab6040830184610f7b565b60006115da825190565b6115e88185602086016110b0565b9290920192915050565b60006115fe82846115d0565b9392505050565b601781526000602082017f486f73706974616c20616c726561647920657869737473000000000000000000815291505b5060200190565b60208082528101610a2581611605565b60208082528101610a2281846110d4565b601481526000602082017f436c61696d20646f6573206e6f7420657869737400000000000000000000000081529150611635565b60208082528101610a258161165d565b602381526000602082017f4f6e6c79206120766f7465722063616e2063616c6c20746869732066756e637481527f696f6e0000000000000000000000000000000000000000000000000000000000602082015291505b5060400190565b60208082528101610a25816116a1565b603581526000602082017f50657263656e746167652073686f756c6420626520612077686f6c65206e756d81527f626572206265747765656e203120616e64203130300000000000000000000000602082015291506116f7565b60208082528101610a258161170e565b634e487b7160e01b600052601260045260246000fd5b60008261179d5761179d611778565b500490565b601781526000602082017f486f73706974616c20646f6573206e6f7420657869737400000000000000000081529150611635565b60208082528101610a25816117a2565b602581526000602082017f5061796d656e7420616d6f756e74206d7573742062652067726561746572207481527f68616e2030000000000000000000000000000000000000000000000000000000602082015291506116f7565b60208082528101610a25816117e6565b6000610a258261134e565b600e81526000602082017f5061796d656e74206661696c656400000000000000000000000000000000000081529150611635565b60208082528101610a258161185b565b606080825281016118b081866110d4565b90506115c36020830185610f7b56fea2646970667358221220f256e03446058661501cec35770dd7787410a0515b659c0f19e7c33ff2098e7164736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 15,
        "contract": "contracts/Treasury.sol:Treasury",
        "label": "claims",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_struct(Claim)10_storage)"
      },
      {
        "astId": 17,
        "contract": "contracts/Treasury.sol:Treasury",
        "label": "claimCounter",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 21,
        "contract": "contracts/Treasury.sol:Treasury",
        "label": "hospitalList",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_address)"
      },
      {
        "astId": 25,
        "contract": "contracts/Treasury.sol:Treasury",
        "label": "medical_procedure_cost",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 29,
        "contract": "contracts/Treasury.sol:Treasury",
        "label": "medical_procedure_probability",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 34,
        "contract": "contracts/Treasury.sol:Treasury",
        "label": "policy",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 38,
        "contract": "contracts/Treasury.sol:Treasury",
        "label": "membership_nft",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 42,
        "contract": "contracts/Treasury.sol:Treasury",
        "label": "policy_name",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_string_storage)"
      },
      {
        "astId": 44,
        "contract": "contracts/Treasury.sol:Treasury",
        "label": "loading_rate",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 46,
        "contract": "contracts/Treasury.sol:Treasury",
        "label": "policy_counter",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 48,
        "contract": "contracts/Treasury.sol:Treasury",
        "label": "treasury_wallet",
        "offset": 0,
        "slot": "10",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_string_memory_ptr,t_address)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_uint256,t_struct(Claim)10_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Treasury.Claim)",
        "numberOfBytes": "32",
        "value": "t_struct(Claim)10_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Claim)10_storage": {
        "encoding": "inplace",
        "label": "struct Treasury.Claim",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/Treasury.sol:Treasury",
            "label": "hospitalName",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 5,
            "contract": "contracts/Treasury.sol:Treasury",
            "label": "patientAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 7,
            "contract": "contracts/Treasury.sol:Treasury",
            "label": "medicalProcedure",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 9,
            "contract": "contracts/Treasury.sol:Treasury",
            "label": "medicalProcedureCost",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}